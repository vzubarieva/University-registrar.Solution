@{
  Layout = "_Layout";
}

@model UniversityRegistrar.Models.Student

<h2>Student Details</h2>
<hr />
<h3>@Html.DisplayNameFor(model => model.Name): @Html.DisplayFor(model => model.Name)</h3>
<h3>@Html.DisplayNameFor(model => model.DateOfEnrollment): @Html.DisplayFor(model => model.DateOfEnrollment)</h3>
@if (@Model.JoinEntities.Count == 0)
{
  <p>This student does not belong to any courses</p>
}
else
{
  <h4>Courses the student belongs to:</h4>
  <ul>
    @foreach (var join in Model.JoinEntities)
    {
      <li>@join.Course.Name</li>
      @using (Html.BeginForm("DeleteCourse", "Students"))
      {
        @Html.Hidden("joinId", @join.CourseStudentId)
        <input type="submit" value="Delete" />
      }
    }
  </ul>
}

@if (@Model.JoinStudentDepartment.Count == 0)
{
  <p>This student does not belong to any department</p>
}
else
{
  <h4>Departments the student belongs to:</h4>
  <ul>
    @foreach (var join in Model.JoinStudentDepartment)
    {
      <li>@join.Department.Name</li>
      @using (Html.BeginForm("DeleteStudent", "Departments"))
      {
        @Html.Hidden("joinId", @join.StudentDepartmentId)
        <input type="submit" value="Delete" />
      }
    }
  </ul>
}

<p>@Html.ActionLink("Back to list", "Index")</p>
<p>@Html.ActionLink("Edit student", "Edit", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Delete student", "Delete", new { id = Model.StudentId })</p>
<p>@Html.ActionLink("Add a course", "Addcourse", new { id = Model.StudentId })</p>
